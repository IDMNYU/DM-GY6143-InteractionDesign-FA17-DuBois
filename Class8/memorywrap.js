var startit = new JitterMatrix();var shifter = new JitterObject("jit.rota");var input = new JitterMatrix();var temp = new JitterMatrix();var output = new JitterMatrix();output.adapt = 0;input.adapt = 0;var thesize = 4;var thedim = [10, 8];setstartit();function setstartit(){	shifter.offset_x = thedim[0];	input.dim = [thedim[0]*thesize*thesize, thedim[1]];	temp.dim = [thedim[0]*thesize*thesize, thedim[1]];	input.usedstdim = 1;	input.dstdimstart = [0,0];	input.dstdimend = [thedim[0]-1, thedim[1]-1];	post(input.dim, "\n");}function size(v){	thesize = v;	setstartit();}function dim(v){	thedim[0] = arguments[0];	thedim[1] = arguments[1];	setstartit();}function jit_matrix(v){startit.frommatrix(v);input.planecount = startit.planecount;output.planecount = startit.planecount;temp.planecount = startit.planecount;shifter.planecount = startit.planecount;shifter.matrixcalc(input,temp);input.usedstdim = 0;input.frommatrix(temp);input.usedstdim = 1;input.frommatrix(startit);output.dim = [input.dim[0]/thesize, input.dim[1]*thesize];output.usedstdim = 1;output.usesrcdim = 1;for(var i = 0;i < thesize; i++){	output.srcdimstart = [output.dim[0]*i, 0];	output.srcdimend = [output.dim[0]*(i+1)-1, input.dim[1]-1];	output.dstdimstart = [0, input.dim[1]*i];	output.dstdimend = [output.dim[0]-1, input.dim[1]*(i+1)-1];	output.frommatrix(input);	}outlet(0, "jit_matrix", output.name);}